---
app_icon: spring

input:
  var:
    - name: APP_PACKAGE_NAME
      required: true
      type: name
      description: |-
        the name:tag for the application package to be published (e.g. registry-host/app-group/app-name)
        this package contains application artfacts, dockerfile & build.yaml file. it's used by image builder to build the application img
    - name: PROJECT_ARTIFACT_ID
      required: true
      type: string
      description: the maven artifact id for the application

    - name: PROJECT_ARTIFACT_VERSION
      required: true
      type: string
      default: 0.0.1
      description: the version of the application artifact

    - name: PACKAGE_NAME
      required: true
      type: string
      description: |-
        the name:tag for the spring recepie package to download (e.g. registry-host/app-group/package-name)
        it contains setup & pipeline flow alongwith build.yaml file
        this package should be already available in the artefact registry like nexus
  secret:
    - name: ART_REG_USER
      description: the artisan registry user name which is deployed into the openshift

    - name: ART_REG_PWD
      description: the artisan registry password which is deployed into the openshift

profiles:
  - name: app
    description: packages the java application uber jar file
    default: true
    type: content/java
    run:
      # copy the docker file to build the jvm version to the artefact(target) package folder
      - cp Dockerfile build/build/Dockerfile
      # copy the below files to build the jvm version to the artefact(target) package folder
      # these files are required to build images & deploy the app
      - cp build-image.sh build/build/build-image.sh
      - cp deploy.yaml.tem build/build/deploy.yaml.tem 
    target: build/build

functions:
  # this function is used by CI pipeline
  - name: build-app
    description: compiles and tests the application
    run:
      - gradle build
      - mkdir build/build
      - cp build/libs/${PROJECT_ARTIFACT_ID}-${PROJECT_ARTIFACT_VERSION}-SNAPSHOT.jar build/build
    input:
      var:
        - PROJECT_ARTIFACT_ID
        - PROJECT_ARTIFACT_VERSION

  # this function is used by CI pipeline
  - name: publish-app
    description: packages and publishes the application
    run:
      - art build -t=${APP_PACKAGE_NAME} -p app
      - art push ${APP_PACKAGE_NAME} -u=${ART_REG_USER}:${ART_REG_PWD}
    input:
      var:
        - APP_PACKAGE_NAME
      secret:
        - ART_REG_USER
        - ART_REG_PWD
